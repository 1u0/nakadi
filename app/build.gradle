buildscript {
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.yaml:snakeyaml:1.21'
        classpath 'org.owasp:dependency-check-gradle:3.3.2'
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'project-report'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'

group 'org.zalando'
sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'org.zalando.nakadi.Application'
springBoot {
    layout = "ZIP"
}

jar {
    baseName = 'nakadi'
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
}

dependencies {
    ext {
        dropwizardVersion = '3.1.3'
        jacksonVersion = '2.9.8'
        springFrameworkVersion = '4.3.23.RELEASE'
    }
    // Override spring-boot BOM versions
    ext['json.version'] = '20180130'
    ext['json-path'] = '2.4.0'
    ext['jsonassert'] = '1.5.0'

    compile project(':core-common')
    compile project(':core-metastore')
    compile project(':core-services')

    compile project(':api-publishing')
    compile project(':api-consumption')
    compile project(':api-metastore')
    compile project(':api-cursors')
    compile project(':api-misc')

    // spring
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'logback-classic'
        exclude module: 'log4j-over-slf4j'
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile "org.springframework:spring-context:$springFrameworkVersion"
    compile "org.springframework:spring-web:$springFrameworkVersion"
    compile "org.springframework:spring-webmvc:$springFrameworkVersion"
    compile "org.springframework.boot:spring-boot-starter-jetty"

    // oauth
    compile('org.springframework.security.oauth:spring-security-oauth2:2.3.5.RELEASE') {
        exclude module: 'spring-beans'
        exclude module: 'spring-core'
        exclude module: 'spring-context'
    }
    compile('org.springframework.boot:spring-boot-starter-security') {
        exclude module: "logback-classic"
    }

    // actuator
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile 'org.zalando.zmon:zmon-actuator:0.9.8'

    // storage
    compile "org.springframework.boot:spring-boot-starter-jdbc"
    compile 'org.postgresql:postgresql:42.2.5'

    compile 'org.springframework.cloud:spring-cloud-starter-hystrix:1.4.5.RELEASE'

    // misc
    compile 'org.apache.httpcomponents:httpclient'
    compile('org.zalando.stups:stups-spring-oauth2-server:1.0.22') {
        exclude module: "httpclient"
    }
    compile 'org.zalando:jackson-datatype-problem:0.22.0'
    compile 'org.zalando:problem:0.22.0'
    compile 'org.zalando:problem-spring-web:0.23.0'
    compile 'com.google.guava:guava:27.1-jre'
    compile 'org.slf4j:slf4j-log4j12'
    compile "io.dropwizard.metrics:metrics-core:$dropwizardVersion"
    compile "com.ryantenney.metrics:metrics-spring:$dropwizardVersion"
    compile "io.dropwizard.metrics:metrics-servlets:$dropwizardVersion"
    compile "io.dropwizard.metrics:metrics-jvm:$dropwizardVersion"
    compile 'org.apache.commons:commons-lang3:3.8.1'
    compile 'org.zalando:nakadi-plugin-api:3.2.1'
    compile 'org.echocat.jomon:runtime:1.6.3'

    // kafka & zookeeper
    compile 'org.apache.kafka:kafka-clients:2.1.0'
    compile('org.apache.kafka:kafka_2.12:2.1.0') {
        exclude module: "zookeeper"
    }

    // json
    compile('com.github.everit-org.json-schema:org.everit.json.schema:1.8.0') {
        exclude module: "json"
    }
    compile("com.fasterxml.jackson.datatype:jackson-datatype-json-org:$jacksonVersion") {
        exclude module: "json"
    }
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-afterburner:$jacksonVersion"
    compile 'org.zalando:twintip-spring-web:1.1.0'
    compile 'org.json:json:20180130'

    // open tracing
    compile 'io.opentracing:opentracing-api:0.31.0'
    compile 'io.opentracing:opentracing-util:0.31.0'

    // tests
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile('org.junit.jupiter:junit-jupiter-api:5.5.2') {
        exclude module: "hamcrest-core"
    }
    testCompile "org.springframework:spring-test"
    testCompile 'org.springframework.boot:spring-boot-test'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile project(path: ':core-common', configuration: 'testOutput')
    testCompile project(path: ':core-services', configuration: 'testOutput')
}
// end::dependencies[]
