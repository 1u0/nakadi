buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.yaml:snakeyaml:1.21'
        classpath 'org.owasp:dependency-check-gradle:3.3.2'
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'project-report'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'

group 'org.zalando'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
}

dependencies {
    implementation project(':core-common')
    implementation project(':core-services')

    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile('org.junit.jupiter:junit-jupiter-api:5.5.2') {
        exclude module: "hamcrest-core"
    }
    testCompile "org.springframework:spring-test"
    testCompile 'org.springframework.boot:spring-boot-test'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile project(path: ':core-common', configuration: 'testOutput')
}
// end::dependencies[]

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
    testLogging.exceptionFormat = 'full'
    maxParallelForks = Runtime.runtime.availableProcessors()
}

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

task testWithReport() {
    dependsOn test
    finalizedBy jacocoTestReport
}

bootRepackage {
    enabled = false
}
